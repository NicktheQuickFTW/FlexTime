version: '3.8'

services:
  # Redis Cache (for session management and caching)
  redis:
    image: redis:7-alpine
    container_name: flextime-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - flextime-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: ${BUILD_TARGET:-production}
    container_name: flextime-backend
    depends_on:
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 3001
      
      # Database Configuration (HELiiX Neon DB)
      NEON_DB_CONNECTION_STRING: ${NEON_DB_CONNECTION_STRING}
      NEON_DB_HOST: ${NEON_DB_HOST}
      NEON_DB_PORT: ${NEON_DB_PORT}
      NEON_DB_NAME: ${NEON_DB_NAME}
      NEON_DB_USER: ${NEON_DB_USER}
      NEON_DB_PASSWORD: ${NEON_DB_PASSWORD}
      NEON_DB_SSL: ${NEON_DB_SSL}
      USE_NEON_DB: true
      ENABLE_NEON_MEMORY: true
      
      # Redis Configuration
      REDIS_URL: redis://redis:6379
      
      # API Keys
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      NOTION_API_KEY: ${NOTION_API_KEY}
      
      # CORS Configuration
      CORS_ORIGIN: http://localhost:3000,http://frontend:3000
      
      # JWT Secret
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-change-in-production}
      
      # Intelligence Engine
      ENABLE_INTELLIGENCE_ENGINE: ${ENABLE_INTELLIGENCE_ENGINE:-true}
      INTELLIGENCE_ENGINE_URL: ${INTELLIGENCE_ENGINE_URL:-http://localhost:4001}
      DISABLE_EXTERNAL_SERVICES: ${DISABLE_EXTERNAL_SERVICES:-false}
    volumes:
      - ./backend/logs:/app/backend/logs
      - ./backend/data/exports:/app/backend/data/exports
      - ./backend/data/compass/models:/app/backend/data/compass/models
      - ./backend/data/compass/training_history:/app/backend/data/compass/training_history
    ports:
      - "3001:3001"
    networks:
      - flextime-network
    command: sh -c "cd /app/backend && node simple-server.js"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: ${BUILD_TARGET:-production}
    container_name: flextime-frontend
    depends_on:
      - backend
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 3000
      REACT_APP_API_URL: ${REACT_APP_API_URL:-http://localhost:3001}
      REACT_APP_WS_URL: ${REACT_APP_WS_URL:-ws://localhost:3001}
    ports:
      - "3000:3000"
    networks:
      - flextime-network
    command: sh -c "cd /app/frontend && npm start"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: flextime-nginx
    depends_on:
      - frontend
      - backend
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      - flextime-network
    profiles:
      - production


networks:
  flextime-network:
    driver: bridge

volumes:
  redis_data:
    driver: local

# Override file for development: docker-compose.override.yml
# Create this file locally for development-specific settings