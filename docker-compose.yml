version: '3.8'

services:
  # Backend API and scheduling engine
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: flextime-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      # Use Neon DB connection from backend/.env
      - NEON_DB_CONNECTION_STRING=${NEON_DB_CONNECTION_STRING}
      - NEON_DB_HOST=${NEON_DB_HOST}
      - NEON_DB_PORT=${NEON_DB_PORT}
      - NEON_DB_NAME=${NEON_DB_NAME}
      - NEON_DB_USER=${NEON_DB_USER}
      - NEON_DB_PASSWORD=${NEON_DB_PASSWORD}
      - NEON_DB_SSL=${NEON_DB_SSL}
      - ENABLE_NEON_MEMORY=${ENABLE_NEON_MEMORY}
      - USE_NEON_DB=${USE_NEON_DB}
      # API Keys
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      # Feature flags
      - ENABLE_CHAMPIONSHIP_CONSTRAINTS=${ENABLE_CHAMPIONSHIP_CONSTRAINTS}
      - ENABLE_INTELLIGENCE_ENGINE=${ENABLE_INTELLIGENCE_ENGINE}
      - DISABLE_EXTERNAL_SERVICES=${DISABLE_EXTERNAL_SERVICES}
      - ENABLE_MCP_COORDINATION=${ENABLE_MCP_COORDINATION}
      # Scheduling parameters
      - MAX_SCHEDULE_ITERATIONS=${MAX_SCHEDULE_ITERATIONS}
      - OPTIMIZATION_THRESHOLD=${OPTIMIZATION_THRESHOLD}
      # Redis config for container communication
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - redis
    networks:
      - flextime-network
    restart: unless-stopped

  # Frontend UI
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: flextime-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:3001
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - flextime-network
    restart: unless-stopped

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: flextime-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - flextime-network
    restart: unless-stopped

networks:
  flextime-network:
    driver: bridge

volumes:
  redis-data: