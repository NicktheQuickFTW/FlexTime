{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/inter_59dee874.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"inter_59dee874-module__9CtR0q__className\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 11, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/inter_59dee874.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Inter%22,%22arguments%22:[{%22subsets%22:[%22latin%22]}],%22variableName%22:%22inter%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Inter', 'Inter Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///Users/nickw/Documents/GitHub/Flextime/frontend/app/components/Navbar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/frontend/app/components/Navbar.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/frontend/app/components/Navbar.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,iQAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsS,GACnU,oEACA","debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file:///Users/nickw/Documents/GitHub/Flextime/frontend/app/components/Navbar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/frontend/app/components/Navbar.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/frontend/app/components/Navbar.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,iQAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkR,GAC/S,gDACA","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///Users/nickw/Documents/GitHub/Flextime/frontend/src/components/ui/FlexTimeAnimatedBackground.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const FlexTimeAnimatedBackground = registerClientReference(\n    function() { throw new Error(\"Attempted to call FlexTimeAnimatedBackground() from the server but FlexTimeAnimatedBackground is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/frontend/src/components/ui/FlexTimeAnimatedBackground.tsx <module evaluation>\",\n    \"FlexTimeAnimatedBackground\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,6BAA6B,CAAA,GAAA,iQAAA,CAAA,0BAAuB,AAAD,EAC5D;IAAa,MAAM,IAAI,MAAM;AAAoQ,GACjS,2FACA","debugId":null}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file:///Users/nickw/Documents/GitHub/Flextime/frontend/src/components/ui/FlexTimeAnimatedBackground.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const FlexTimeAnimatedBackground = registerClientReference(\n    function() { throw new Error(\"Attempted to call FlexTimeAnimatedBackground() from the server but FlexTimeAnimatedBackground is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/frontend/src/components/ui/FlexTimeAnimatedBackground.tsx\",\n    \"FlexTimeAnimatedBackground\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,6BAA6B,CAAA,GAAA,iQAAA,CAAA,0BAAuB,AAAD,EAC5D;IAAa,MAAM,IAAI,MAAM;AAAoQ,GACjS,uEACA","debugId":null}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///Users/nickw/Documents/GitHub/Flextime/frontend/src/types/index.ts"],"sourcesContent":["// Type definitions for the FlexTime Scheduling System UI\n\nexport enum SportType {\n  FOOTBALL = 'Football',\n  MENS_BASKETBALL = 'Men\\'s Basketball',\n  WOMENS_BASKETBALL = 'Women\\'s Basketball',\n  BASEBALL = 'Baseball',\n  SOFTBALL = 'Softball',\n  VOLLEYBALL = 'Volleyball',\n  SOCCER = 'Soccer',\n  MENS_TENNIS = 'Men\\'s Tennis',\n  WOMENS_TENNIS = 'Women\\'s Tennis',\n  GOLF = 'Golf',\n  SWIMMING = 'Swimming',\n  TRACK = 'Track',\n  CROSS_COUNTRY = 'Cross Country',\n  WRESTLING = 'Wrestling',\n  GYMNASTICS = 'Gymnastics'\n}\n\nexport enum ConstraintType {\n  REST_DAYS = 'RestDays',\n  MAX_CONSECUTIVE_AWAY = 'MaxConsecutiveAway',\n  MAX_CONSECUTIVE_HOME = 'MaxConsecutiveHome',\n  VENUE_UNAVAILABILITY = 'VenueUnavailability',\n  TEAM_UNAVAILABILITY = 'TeamUnavailability',\n  REQUIRED_MATCHUP = 'RequiredMatchup',\n  AVOID_BACK_TO_BACK = 'AvoidBackToBack'\n}\n\nexport enum ConstraintCategory {\n  TEAM = 'Team',\n  VENUE = 'Venue',\n  SCHEDULE = 'Schedule'\n}\n\nexport interface Location {\n  latitude: number;\n  longitude: number;\n  name: string;\n  address?: string;\n  city: string;\n  state: string;\n  zipCode?: string;\n}\n\nexport interface Venue {\n  venue_id?: number;\n  name: string;\n  capacity: number;\n  location: Location;\n  unavailableDates?: string[];\n}\n\nexport interface School {\n  school_id?: number;\n  name: string;\n  abbreviation: string;\n  school_abbreviation?: string;  // Official school abbreviation from database\n  preferred_school_name?: string; // Preferred display name\n  short_display?: string; // Short display name\n  schedule_display?: string; // Name used in schedules\n  mascot?: string;\n  primary_color?: string;\n  secondary_color?: string;\n  city?: string;\n  state?: string;\n  country?: string;\n  latitude?: number;\n  longitude?: number;\n}\n\nexport interface Team {\n  team_id?: number;\n  name: string;\n  code?: string;\n  school: School;\n  championship_id?: number;\n  division?: string;\n  seed?: number;\n  status?: 'registered' | 'confirmed' | 'withdrawn' | 'disqualified';\n  homeVenues?: Venue[];\n}\n\nexport interface Game {\n  game_id?: number;\n  schedule_id?: number;\n  home_team_id: number;\n  away_team_id: number;\n  venue_id?: number;\n  date?: string;\n  time?: string;\n  status?: 'scheduled' | 'in_progress' | 'completed' | 'cancelled' | 'postponed';\n  homeTeam?: Team;\n  awayTeam?: Team;\n  venue?: Venue;\n}\n\nexport interface Constraint {\n  constraint_id?: number;\n  schedule_id?: number;\n  type: ConstraintType;\n  category: ConstraintCategory;\n  priority: number;\n  parameters: Record<string, any>;\n  teams?: Team[];\n}\n\nexport interface Schedule {\n  schedule_id?: number;\n  name: string;\n  sport_id: number;\n  championship_id?: number;\n  season: string;\n  start_date: string;\n  end_date: string;\n  status: 'draft' | 'published' | 'archived';\n  created_by?: number;\n  updated_by?: number;\n  metadata?: Record<string, any>;\n  games?: Game[];\n  teams?: Team[];\n  constraints?: Constraint[];\n}\n\nexport interface ScheduleOptimizationResult {\n  schedule: Schedule;\n  metrics: {\n    totalTravelDistance: number;\n    averageTravelDistance: number;\n    maxTravelDistance: number;\n    homeAwayBalance: number;\n    constraintViolations: number;\n  };\n}\n\nexport interface Conflict {\n  type: 'schedule' | 'venue' | 'team' | 'travel';\n  severity: 'low' | 'medium' | 'high' | 'critical';\n  message: string;\n  constraint?: Constraint;\n  gameId?: string;\n  affectedGames?: string[];\n}\n\nexport interface ApiResponse<T> {\n  success: boolean;\n  data?: T;\n  error?: string;\n  message?: string;\n}\n"],"names":[],"mappings":"AAAA,yDAAyD;;;;;;AAElD,IAAA,AAAK,mCAAA;;;;;;;;;;;;;;;;WAAA;;AAkBL,IAAA,AAAK,wCAAA;;;;;;;;WAAA;;AAUL,IAAA,AAAK,4CAAA;;;;WAAA","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///Users/nickw/Documents/GitHub/Flextime/frontend/src/theme/extendedTheme.ts"],"sourcesContent":["import { createTheme, PaletteOptions, Theme } from '@mui/material/styles';\nimport { SportType } from '../types';\n\n// Augment the Theme and PaletteOptions interfaces to include our custom properties\ndeclare module '@mui/material/styles' {\n  interface Palette {\n    gradient: string;\n    sportAccent: {\n      main: string;\n      light: string;\n      dark: string;\n      contrastText: string;\n    };\n  }\n  \n  interface PaletteOptions {\n    gradient?: string;\n    sportAccent?: {\n      main: string;\n      light: string;\n      dark: string;\n      contrastText: string;\n    };\n  }\n\n  interface TypeBackground {\n    card?: string;\n  }\n}\n\n// Augment the Button component to allow our custom color\ndeclare module '@mui/material/Button' {\n  interface ButtonPropsColorOverrides {\n    sportAccent: true;\n  }\n}\n\n// Sport-specific color palettes\nconst sportColorMap: Record<SportType, { main: string; light: string; dark: string }> = {\n  [SportType.FOOTBALL]: { \n    main: '#8C1D40', \n    light: '#B33D5E', \n    dark: '#5E1429' \n  },\n  [SportType.MENS_BASKETBALL]: { \n    main: '#00A3E0', \n    light: '#33B5E7', \n    dark: '#0076A3' \n  },\n  [SportType.WOMENS_BASKETBALL]: { \n    main: '#00A3E0', \n    light: '#33B5E7', \n    dark: '#0076A3' \n  },\n  [SportType.BASEBALL]: { \n    main: '#FFC627', \n    light: '#FFD45F', \n    dark: '#D9A61E' \n  },\n  [SportType.SOFTBALL]: { \n    main: '#FFC627', \n    light: '#FFD45F', \n    dark: '#D9A61E' \n  },\n  [SportType.VOLLEYBALL]: { \n    main: '#00A3E0', \n    light: '#33B5E7', \n    dark: '#0076A3' \n  },\n  [SportType.SOCCER]: { \n    main: '#00A3E0', \n    light: '#33B5E7', \n    dark: '#0076A3' \n  },\n  [SportType.MENS_TENNIS]: { \n    main: '#FFC627', \n    light: '#FFD45F', \n    dark: '#D9A61E' \n  },\n  [SportType.WOMENS_TENNIS]: { \n    main: '#FFC627', \n    light: '#FFD45F', \n    dark: '#D9A61E' \n  },\n  [SportType.GOLF]: { \n    main: '#FFC627', \n    light: '#FFD45F', \n    dark: '#D9A61E' \n  },\n  [SportType.SWIMMING]: { \n    main: '#00A3E0', \n    light: '#33B5E7', \n    dark: '#0076A3' \n  },\n  [SportType.TRACK]: { \n    main: '#8C1D40', \n    light: '#B33D5E', \n    dark: '#5E1429' \n  },\n  [SportType.CROSS_COUNTRY]: { \n    main: '#8C1D40', \n    light: '#B33D5E', \n    dark: '#5E1429' \n  },\n  [SportType.WRESTLING]: { \n    main: '#8C1D40', \n    light: '#B33D5E', \n    dark: '#5E1429' \n  },\n  [SportType.GYMNASTICS]: { \n    main: '#00A3E0', \n    light: '#33B5E7', \n    dark: '#0076A3' \n  }\n};\n\n/**\n * Creates an extended theme with CSS variables and sport-specific customizations\n * \n * @param mode - The theme mode ('light' or 'dark')\n * @param sportType - The current sport type\n * @returns An extended MUI theme\n */\nexport const createExtendedTheme = (\n  mode: 'light' | 'dark' = 'light',\n  sportType: SportType = SportType.FOOTBALL\n): Theme => {\n  // Get sport-specific colors\n  const sportColors = sportColorMap[sportType] || sportColorMap[SportType.FOOTBALL];\n  \n  // Determine text contrast color based on mode\n  const contrastText = mode === 'light' ? '#ffffff' : '#000000';\n  \n  // Create the palette options based on mode and sport\n  const paletteOptions: PaletteOptions = {\n    mode,\n    // Clean monochrome base palette\n    primary: {\n      main: mode === 'light' ? '#000000' : '#ffffff',\n      light: mode === 'light' ? '#333333' : '#f5f5f5',\n      dark: mode === 'light' ? '#000000' : '#cccccc',\n      contrastText: mode === 'light' ? '#ffffff' : '#000000',\n    },\n    secondary: {\n      main: mode === 'light' ? '#666666' : '#999999',\n      light: mode === 'light' ? '#888888' : '#bbbbbb',\n      dark: mode === 'light' ? '#444444' : '#777777',\n      contrastText: mode === 'light' ? '#ffffff' : '#000000',\n    },\n    // Sport-specific accent color (keep for branding)\n    sportAccent: {\n      main: sportColors.main,\n      light: sportColors.light,\n      dark: sportColors.dark,\n      contrastText,\n    },\n    // Clean monochrome gradient\n    gradient: mode === 'light' ? \n      'linear-gradient(135deg, #000000, #333333)' : \n      'linear-gradient(135deg, #ffffff, #f5f5f5)',\n    // Clean monochrome backgrounds\n    background: {\n      default: mode === 'light' ? '#ffffff' : '#000000',\n      paper: mode === 'light' ? '#ffffff' : '#000000',\n      card: mode === 'light' ? '#ffffff' : '#000000',\n    },\n    text: {\n      primary: mode === 'light' ? '#000000' : '#ffffff',\n      secondary: mode === 'light' ? '#666666' : '#999999',\n    },\n  };\n\n  // Create the theme with CSS variables enabled\n  return createTheme({\n    cssVariables: true, // Enable CSS variables\n    palette: paletteOptions,\n    typography: {\n      // FT Brand Typography System\n      fontFamily: '\"Exo 2\", \"Inter\", \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n      h1: {\n        fontFamily: '\"Orbitron\", monospace', // Brand headers\n        fontWeight: 800,\n        letterSpacing: '-0.025em',\n      },\n      h2: {\n        fontFamily: '\"Orbitron\", monospace', // Brand headers\n        fontWeight: 700,\n        letterSpacing: '-0.02em',\n      },\n      h3: {\n        fontFamily: '\"Rajdhani\", sans-serif', // UI headers\n        fontWeight: 700,\n        letterSpacing: '0.025em',\n      },\n      h4: {\n        fontFamily: '\"Rajdhani\", sans-serif', // UI headers\n        fontWeight: 600,\n        letterSpacing: '0.025em',\n      },\n      h5: {\n        fontFamily: '\"Rajdhani\", sans-serif', // UI headers\n        fontWeight: 600,\n        letterSpacing: '0.025em',\n      },\n      h6: {\n        fontFamily: '\"Rajdhani\", sans-serif', // UI headers\n        fontWeight: 600,\n        letterSpacing: '0.025em',\n      },\n      body1: {\n        fontFamily: '\"Exo 2\", sans-serif', // Body text\n        fontWeight: 400,\n        letterSpacing: '0.015em',\n      },\n      body2: {\n        fontFamily: '\"Exo 2\", sans-serif', // Body text\n        fontWeight: 400,\n        letterSpacing: '0.015em',\n      },\n      subtitle1: {\n        fontFamily: '\"Rajdhani\", sans-serif', // UI text\n        fontWeight: 500,\n        letterSpacing: '0.025em',\n      },\n      subtitle2: {\n        fontFamily: '\"Rajdhani\", sans-serif', // UI text\n        fontWeight: 500,\n        letterSpacing: '0.025em',\n      },\n      button: {\n        fontFamily: '\"Rajdhani\", sans-serif', // UI buttons\n        fontWeight: 600,\n        letterSpacing: '0.025em',\n        textTransform: 'none',\n      },\n      caption: {\n        fontFamily: '\"Exo 2\", sans-serif',\n        fontWeight: 400,\n        letterSpacing: '0.015em',\n      },\n      overline: {\n        fontFamily: '\"Rajdhani\", sans-serif',\n        fontWeight: 500,\n        letterSpacing: '0.1em',\n        textTransform: 'uppercase',\n      },\n    },\n    components: {\n      MuiButton: {\n        styleOverrides: {\n          root: {\n            textTransform: 'none',\n            borderRadius: 8,\n            padding: '12px 24px',\n            fontWeight: 500,\n            fontSize: '14px',\n            transition: 'all 0.2s ease',\n            border: `1px solid ${mode === 'light' ? '#e5e5e5' : '#333333'}`,\n            '&:hover': {\n              transform: 'translateY(-1px)',\n              boxShadow: mode === 'light' ? \n                '0 4px 12px rgba(0, 0, 0, 0.08)' : \n                '0 4px 12px rgba(255, 255, 255, 0.08)',\n            },\n          },\n          containedPrimary: {\n            background: mode === 'light' ? '#000000' : '#ffffff',\n            color: mode === 'light' ? '#ffffff' : '#000000',\n            border: 'none',\n            '&:hover': {\n              background: mode === 'light' ? '#333333' : '#e5e5e5',\n            },\n          },\n          outlined: {\n            borderColor: mode === 'light' ? '#000000' : '#ffffff',\n            color: mode === 'light' ? '#000000' : '#ffffff',\n            '&:hover': {\n              background: mode === 'light' ? 'rgba(0, 0, 0, 0.04)' : 'rgba(255, 255, 255, 0.04)',\n              borderColor: mode === 'light' ? '#000000' : '#ffffff',\n            },\n          },\n          text: {\n            color: mode === 'light' ? '#000000' : '#ffffff',\n            '&:hover': {\n              background: mode === 'light' ? 'rgba(0, 0, 0, 0.04)' : 'rgba(255, 255, 255, 0.04)',\n            },\n          },\n        },\n        variants: [\n          {\n            props: { variant: 'contained', color: 'sportAccent' },\n            style: ({ theme }) => ({\n              background: theme.vars ? \n                `linear-gradient(135deg, var(--mui-palette-sportAccent-main), var(--mui-palette-sportAccent-light))` :\n                `linear-gradient(135deg, ${theme.palette.sportAccent.main}, ${theme.palette.sportAccent.light})`,\n              color: theme.palette.sportAccent.contrastText,\n            }),\n          },\n          {\n            props: { color: 'sportAccent' },\n            style: ({ theme }) => ({\n              color: theme.palette.sportAccent.main,\n              borderColor: theme.palette.sportAccent.main,\n              '&:hover': {\n                backgroundColor: `${theme.palette.sportAccent.main}14`, // 14 = 8% opacity in hex\n                borderColor: theme.palette.sportAccent.main,\n              },\n            }),\n          },\n        ],\n      },\n      MuiCard: {\n        styleOverrides: {\n          root: {\n            borderRadius: 12,\n            border: `1px solid ${mode === 'light' ? '#e5e5e5' : '#333333'}`,\n            boxShadow: 'none',\n            background: mode === 'light' ? '#ffffff' : '#000000',\n            transition: 'all 0.2s ease',\n            '&:hover': {\n              transform: 'translateY(-2px)',\n              boxShadow: mode === 'light' ? \n                '0 8px 16px rgba(0, 0, 0, 0.08)' : \n                '0 8px 16px rgba(255, 255, 255, 0.08)',\n              borderColor: mode === 'light' ? '#cccccc' : '#555555',\n            },\n          },\n        },\n      },\n      MuiAppBar: {\n        styleOverrides: {\n          root: {\n            boxShadow: 'none',\n            borderBottom: `1px solid ${mode === 'light' ? '#e5e5e5' : '#333333'}`,\n            backgroundColor: mode === 'light' ? '#ffffff' : '#000000',\n          },\n        },\n      },\n      // Add input and form field styling\n      MuiTextField: {\n        styleOverrides: {\n          root: {\n            '& .MuiOutlinedInput-root': {\n              borderRadius: 8,\n              fontSize: '14px',\n              '& fieldset': {\n                borderColor: mode === 'light' ? '#e5e5e5' : '#333333',\n              },\n              '&:hover fieldset': {\n                borderColor: mode === 'light' ? '#cccccc' : '#555555',\n              },\n              '&.Mui-focused fieldset': {\n                borderColor: mode === 'light' ? '#000000' : '#ffffff',\n                borderWidth: 1,\n              },\n            },\n            '& .MuiInputLabel-root': {\n              color: mode === 'light' ? '#666666' : '#999999',\n              fontSize: '14px',\n              '&.Mui-focused': {\n                color: mode === 'light' ? '#000000' : '#ffffff',\n              },\n            },\n          },\n        },\n      },\n      MuiDialog: {\n        styleOverrides: {\n          paper: {\n            borderRadius: 12,\n            border: `1px solid ${mode === 'light' ? '#e5e5e5' : '#333333'}`,\n            boxShadow: mode === 'light' ? \n              '0 20px 40px rgba(0, 0, 0, 0.1)' : \n              '0 20px 40px rgba(255, 255, 255, 0.1)',\n          },\n        },\n      },\n      MuiTable: {\n        styleOverrides: {\n          root: {\n            '& .MuiTableCell-head': {\n              backgroundColor: mode === 'light' ? '#f8f9fa' : '#111111',\n              borderBottom: `1px solid ${mode === 'light' ? '#e5e5e5' : '#333333'}`,\n              fontWeight: 600,\n              fontSize: '13px',\n              textTransform: 'uppercase',\n              letterSpacing: '0.5px',\n            },\n            '& .MuiTableCell-body': {\n              borderBottom: `1px solid ${mode === 'light' ? '#f0f0f0' : '#222222'}`,\n              fontSize: '14px',\n            },\n          },\n        },\n      },\n    },\n  });\n};\n\nexport default createExtendedTheme;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 494, "column": 0}, "map": {"version":3,"sources":["file:///Users/nickw/Documents/GitHub/Flextime/frontend/src/config/sportConfig.ts"],"sourcesContent":["// Sport-specific configuration for FlexTime UI\n\n// Define sport-specific configuration interface\nexport interface SportConfig {\n  // Basic information\n  name: string;\n  icon: string;\n  color: string;\n  \n  // Game parameters\n  defaultGameDuration: number; // in minutes\n  minRestDays: number;\n  recommendedRestDays: number;\n  \n  // Season parameters\n  typicalSeasonLength: number; // in weeks\n  defaultGamesPerTeam: number;\n  maxGamesPerWeek: number;\n  \n  // Scheduling rules\n  allowDoubleHeaders: boolean;\n  requireHomeAwayBalance: boolean;\n  maxConsecutiveHomeGames: number;\n  maxConsecutiveAwayGames: number;\n  \n  // Venue requirements\n  venueTypes: string[];\n  requiresSpecializedVenues: boolean;\n  \n  // Visualization settings\n  calendarViewEnabled: boolean;\n  matrixViewEnabled: boolean;\n  bracketViewEnabled: boolean;\n  \n  // Custom components\n  customScheduleComponent?: string;\n  customGameComponent?: string;\n  \n  // Sport-specific constraints\n  defaultConstraints: {\n    name: string;\n    description: string;\n    defaultPriority: number;\n    category: string;\n  }[];\n  \n  // Conference scheduling parameters\n  conferenceSchedulingRules?: {\n    totalGames: number;\n    totalWindows: number;\n    playTwiceCount?: number;\n    playOnceCount?: number;\n    hasBye?: boolean;\n    coreRules: string[];\n    softRules: string[];\n    seriesLength?: number;\n    maxHomeSeries?: number;\n    weeklyFormat?: string;\n  };\n  \n  // Additional properties for tennis sports\n  isOutdoorSport?: boolean;\n  hasIndoorBackup?: boolean;\n  schedulingParameters?: {\n    conferenceFormat: string;\n    matchCount: number;\n    weekCount: number;\n    byeWeeks: number;\n    typicalMatchDays: string[];\n    specialMatchDays?: {\n      [team: string]: string[];\n    };\n    weeklyCadence?: string;\n    travelPartners?: {\n      [team: string]: string | null;\n    };\n    travelPods?: {\n      [podName: string]: string[];\n    };\n    elevationTeams?: string[];\n    legacySchools?: string[];\n    affiliateSchools?: string[];\n    specialAgreements?: Array<{\n      teams: string[];\n      years: string[];\n      homeTeam: string;\n      description: string;\n    }>;\n    seasonDates: {\n      [season: string]: {\n        conferencePlayStart: string;\n        conferencePlayEnd: string;\n        championshipStart: string;\n        championshipEnd: string;\n      };\n    };\n  };\n  \n  // Flag to indicate if regular season scheduling is applicable\n  regularSeasonScheduling?: boolean;\n}\n\n// Sport sponsorship by institution\nexport interface SportSponsorship {\n  [sportType: string]: string[]; // Array of institution names that sponsor the sport\n}\n\n// Sport type enumeration\nexport enum SportType {\n  FOOTBALL = 'football',\n  MENS_BASKETBALL = 'mens_basketball',\n  WOMENS_BASKETBALL = 'womens_basketball',\n  BASEBALL = 'baseball',\n  SOFTBALL = 'softball',\n  VOLLEYBALL = 'volleyball',\n  SOCCER = 'soccer',\n  MENS_TENNIS = 'mens_tennis',\n  WOMENS_TENNIS = 'womens_tennis',\n  GYMNASTICS = 'gymnastics',\n  WRESTLING = 'wrestling',\n  MENS_GOLF = 'mens_golf',\n  WOMENS_GOLF = 'womens_golf',\n  MENS_SWIMMING = 'mens_swimming',\n  WOMENS_SWIMMING = 'womens_swimming',\n  MENS_INDOOR_TRACK = 'mens_indoor_track',\n  WOMENS_INDOOR_TRACK = 'womens_indoor_track',\n  MENS_OUTDOOR_TRACK = 'mens_outdoor_track',\n  WOMENS_OUTDOOR_TRACK = 'womens_outdoor_track',\n  MENS_CROSS_COUNTRY = 'mens_cross_country',\n  WOMENS_CROSS_COUNTRY = 'womens_cross_country',\n  BEACH_VOLLEYBALL = 'beach_volleyball',\n  LACROSSE = 'lacrosse',\n  ROWING = 'rowing',\n  EQUESTRIAN = 'equestrian'\n}\n\n// Hard-coded sport sponsorship information\nexport const sportSponsorship: SportSponsorship = {\n  [SportType.FOOTBALL]: [\n    'Arizona', 'Arizona State', 'Baylor', 'BYU', 'Cincinnati', \n    'Colorado', 'Houston', 'Iowa State', 'Kansas', 'Kansas State', \n    'Oklahoma State', 'TCU', 'Texas Tech', 'UCF', 'Utah', 'West Virginia'\n  ],\n  [SportType.MENS_BASKETBALL]: [\n    'Arizona', 'Arizona State', 'Baylor', 'BYU', 'Cincinnati', \n    'Colorado', 'Houston', 'Iowa State', 'Kansas', 'Kansas State', \n    'Oklahoma State', 'TCU', 'Texas Tech', 'UCF', 'Utah', 'West Virginia'\n  ],\n  [SportType.WOMENS_BASKETBALL]: [\n    'Arizona', 'Arizona State', 'Baylor', 'BYU', 'Cincinnati', \n    'Colorado', 'Houston', 'Iowa State', 'Kansas', 'Kansas State', \n    'Oklahoma State', 'TCU', 'Texas Tech', 'UCF', 'Utah', 'West Virginia'\n  ],\n  [SportType.BASEBALL]: [\n    'Arizona', 'Arizona State', 'Baylor', 'BYU', 'Cincinnati', \n    'Houston', 'Kansas', 'Kansas State', 'Oklahoma State', 'TCU', \n    'Texas Tech', 'UCF', 'Utah', 'West Virginia'\n  ],\n  [SportType.SOFTBALL]: [\n    'Arizona', 'Arizona State', 'Baylor', 'BYU', 'Houston', \n    'Iowa State', 'Kansas', 'Oklahoma State', 'Texas Tech', 'UCF', 'Utah'\n  ],\n  [SportType.VOLLEYBALL]: [\n    'Arizona', 'Arizona State', 'Baylor', 'BYU', 'Cincinnati', \n    'Colorado', 'Houston', 'Iowa State', 'Kansas', 'Kansas State', \n    'TCU', 'Texas Tech', 'UCF', 'Utah', 'West Virginia'\n  ],\n  [SportType.SOCCER]: [\n    'Arizona', 'Arizona State', 'Baylor', 'BYU', 'Cincinnati', 'Colorado', \n    'Houston', 'Iowa State', 'Kansas', 'Kansas State', 'Oklahoma State', \n    'TCU', 'Texas Tech', 'UCF', 'Utah', 'West Virginia'\n  ],\n  [SportType.MENS_TENNIS]: [\n    'Arizona', 'Arizona State', 'Baylor', 'BYU', 'Oklahoma State', \n    'TCU', 'Texas Tech', 'UCF', 'Utah'\n  ],\n  [SportType.WOMENS_TENNIS]: [\n    'Arizona', 'Arizona State', 'Baylor', 'BYU', 'Cincinnati', \n    'Colorado', 'Houston', 'Iowa State', 'Kansas', 'Kansas State', \n    'Oklahoma State', 'TCU', 'Texas Tech', 'UCF', 'Utah', 'West Virginia'\n  ],\n  [SportType.GYMNASTICS]: [\n    'Arizona', 'Arizona State', 'BYU', 'Iowa State', 'Utah', 'West Virginia', 'Denver'\n  ],\n  [SportType.WRESTLING]: [\n    'Arizona State', 'Iowa State', 'Oklahoma State', 'West Virginia',\n    'Air Force', 'Cal Baptist', 'Missouri', 'North Dakota State', 'Northern Colorado', \n    'Northern Iowa', 'Oklahoma', 'South Dakota State', 'Utah Valley', 'Wyoming'\n  ],\n  [SportType.MENS_GOLF]: [\n    'Arizona', 'Arizona State', 'Baylor', 'BYU', 'Cincinnati', \n    'Colorado', 'Houston', 'Iowa State', 'Kansas', 'Kansas State', \n    'Oklahoma State', 'TCU', 'Texas Tech', 'UCF', 'Utah', 'West Virginia'\n  ],\n  [SportType.WOMENS_GOLF]: [\n    'Arizona', 'Arizona State', 'Baylor', 'BYU', 'Cincinnati', \n    'Colorado', 'Houston', 'Iowa State', 'Kansas', 'Kansas State', \n    'Oklahoma State', 'TCU', 'Texas Tech', 'UCF'\n  ],\n  [SportType.MENS_SWIMMING]: [\n    'Arizona', 'Arizona State', 'BYU', 'Cincinnati', 'TCU', 'Utah', 'West Virginia'\n  ],\n  [SportType.WOMENS_SWIMMING]: [\n    'Arizona', 'Arizona State', 'BYU', 'Cincinnati', 'Houston', \n    'Iowa State', 'Kansas', 'TCU', 'Utah', 'West Virginia'\n  ],\n  [SportType.MENS_INDOOR_TRACK]: [\n    'Arizona', 'Arizona State', 'Baylor', 'BYU', 'Cincinnati', \n    'Colorado', 'Houston', 'Iowa State', 'Kansas', 'Kansas State', \n    'Oklahoma State', 'TCU', 'Texas Tech'\n  ],\n  [SportType.WOMENS_INDOOR_TRACK]: [\n    'Arizona', 'Arizona State', 'Baylor', 'BYU', 'Cincinnati', \n    'Colorado', 'Houston', 'Iowa State', 'Kansas', 'Kansas State', \n    'Oklahoma State', 'TCU', 'Texas Tech', 'UCF', 'Utah', 'West Virginia'\n  ],\n  [SportType.MENS_OUTDOOR_TRACK]: [\n    'Arizona', 'Arizona State', 'Baylor', 'BYU', 'Cincinnati', \n    'Colorado', 'Houston', 'Iowa State', 'Kansas', 'Kansas State', \n    'Oklahoma State', 'TCU', 'Texas Tech'\n  ],\n  [SportType.WOMENS_OUTDOOR_TRACK]: [\n    'Arizona', 'Arizona State', 'Baylor', 'BYU', 'Cincinnati', \n    'Colorado', 'Houston', 'Iowa State', 'Kansas', 'Kansas State', \n    'Oklahoma State', 'TCU', 'Texas Tech', 'UCF', 'Utah', 'West Virginia'\n  ],\n  [SportType.MENS_CROSS_COUNTRY]: [\n    'Arizona', 'Arizona State', 'Baylor', 'BYU', 'Cincinnati', \n    'Colorado', 'Houston', 'Iowa State', 'Kansas', 'Kansas State', \n    'Oklahoma State', 'TCU', 'Texas Tech'\n  ],\n  [SportType.WOMENS_CROSS_COUNTRY]: [\n    'Arizona', 'Arizona State', 'Baylor', 'BYU', 'Cincinnati', \n    'Colorado', 'Houston', 'Iowa State', 'Kansas', 'Kansas State', \n    'Oklahoma State', 'TCU', 'Texas Tech', 'UCF', 'Utah', 'West Virginia'\n  ],\n  [SportType.BEACH_VOLLEYBALL]: [\n    'Arizona', 'Arizona State', 'TCU', 'Utah'\n  ],\n  [SportType.LACROSSE]: [\n    'Arizona State', 'Cincinnati', 'Colorado', 'Florida', 'San Diego State', 'UC Davis'\n  ],\n  [SportType.ROWING]: [\n    'Kansas', 'Kansas State', 'UCF', 'West Virginia', 'Old Dominion', 'Tulsa'\n  ],\n  [SportType.EQUESTRIAN]: [\n    'Baylor', 'Oklahoma State', 'TCU', 'Fresno'\n  ]\n};\n\n// Helper function to get institutions that sponsor a specific sport\nexport const getSportSponsors = (sportType: SportType): string[] => {\n  return sportSponsorship[sportType] || [];\n};\n\n// Helper function to check if an institution sponsors a specific sport\nexport const doesSchoolSponsorSport = (school: string, sportType: SportType): boolean => {\n  return sportSponsorship[sportType]?.includes(school) || false;\n};\n\n// Define which sports have regular season scheduling\nexport const sportsWithRegularSeason = [\n  SportType.FOOTBALL,\n  SportType.MENS_BASKETBALL,\n  SportType.WOMENS_BASKETBALL,\n  SportType.BASEBALL,\n  SportType.SOFTBALL,\n  SportType.VOLLEYBALL,\n  SportType.SOCCER,\n  SportType.MENS_TENNIS,\n  SportType.WOMENS_TENNIS,\n  SportType.GYMNASTICS,\n  SportType.WRESTLING,\n  SportType.LACROSSE\n];\n\n// Helper function to check if a sport has regular season scheduling\nexport const hasRegularSeasonScheduling = (sportType: SportType): boolean => {\n  return sportsWithRegularSeason.includes(sportType);\n};\n\n// Define configurations for each sport\nconst sportConfigurations = {\n  [SportType.FOOTBALL]: {\n    name: 'Football',\n    icon: 'sports_football',\n    color: '#8C1D40',\n    defaultGameDuration: 180,\n    minRestDays: 5,\n    recommendedRestDays: 7,\n    typicalSeasonLength: 9,  // 9-week period for conference games\n    defaultGamesPerTeam: 9,  // 9 conference games per team\n    maxGamesPerWeek: 1,\n    allowDoubleHeaders: false,\n    requireHomeAwayBalance: true,\n    maxConsecutiveHomeGames: 3,\n    maxConsecutiveAwayGames: 2, // Core principle: No more than 2 consecutive road games\n    venueTypes: ['Stadium', 'Field'],\n    requiresSpecializedVenues: true,\n    calendarViewEnabled: true,\n    matrixViewEnabled: true,\n    bracketViewEnabled: false,\n    regularSeasonScheduling: true,\n    defaultConstraints: [\n      {\n        name: 'No More Than 2 Consecutive Road Games',\n        description: 'No school plays more than two consecutive road Conference games',\n        defaultPriority: 5,\n        category: 'Core'\n      },\n      {\n        name: 'No 4-of-5 Road Games',\n        description: 'No school plays four-of-five Conference games on the road',\n        defaultPriority: 5,\n        category: 'Core'\n      },\n      {\n        name: 'Limit Open Week Advantage',\n        description: 'No school plays a Conference team coming off an open week more than twice',\n        defaultPriority: 5,\n        category: 'Core'\n      },\n      {\n        name: 'No Double Back-to-Back Road Games',\n        description: 'No school plays two sets of back-to-back Conference Road games in a season',\n        defaultPriority: 5,\n        category: 'Core'\n      },\n      {\n        name: 'Thursday Game Recovery',\n        description: 'Equal recovery period for teams playing in Thursday games',\n        defaultPriority: 5,\n        category: 'Core'\n      },\n      {\n        name: 'Home Game Distribution',\n        description: 'At least one of the first two games and one of the last two games as home games',\n        defaultPriority: 4,\n        category: 'Soft'\n      },\n      {\n        name: 'Avoid 3 Weeks Without Home Game',\n        description: 'Avoid institutions playing three straight weeks without a home game on campus',\n        defaultPriority: 4,\n        category: 'Soft'\n      },\n      {\n        name: 'Avoid Away-Bye-Away',\n        description: 'Avoid the away-bye-away scenario unless a Thursday appearance is involved',\n        defaultPriority: 4,\n        category: 'Soft'\n      },\n      {\n        name: 'Time Zone Consideration',\n        description: 'Consider crossing multiple time zones in game sequencing',\n        defaultPriority: 3,\n        category: 'Soft'\n      },\n      {\n        name: 'Media Rights Obligations',\n        description: 'Meet contractual obligations for ABC/ESPN and FOX telecasts',\n        defaultPriority: 5,\n        category: 'Media'\n      }\n    ],\n    schedulingParameters: {\n      conferenceFormat: 'Nine-Game Schedule',\n      matchCount: 9,\n      weekCount: 9,\n      byeWeeks: 1,\n      typicalMatchDays: ['Saturday'],\n      specialMatchDays: {\n        'Weeknight': ['Thursday']\n      },\n      seasonDates: {\n        '2024-25': {\n          conferencePlayStart: '2024-09-14',\n          conferencePlayEnd: '2024-11-30', // Thanksgiving Saturday\n          championshipStart: '2024-12-07',\n          championshipEnd: '2024-12-07'\n        },\n        '2025-26': {\n          conferencePlayStart: '2025-09-13',\n          conferencePlayEnd: '2025-11-29', // Thanksgiving Saturday\n          championshipStart: '2025-12-06',\n          championshipEnd: '2025-12-06'\n        }\n      }\n    }\n  },\n  \n  [SportType.MENS_BASKETBALL]: {\n    name: 'Men\\'s Basketball',\n    icon: 'sports_basketball',\n    color: '#FF9800',\n    defaultGameDuration: 150,\n    minRestDays: 2,\n    recommendedRestDays: 3,\n    typicalSeasonLength: 10,\n    defaultGamesPerTeam: 18,\n    maxGamesPerWeek: 2,\n    allowDoubleHeaders: false,\n    requireHomeAwayBalance: true,\n    maxConsecutiveHomeGames: 3,\n    maxConsecutiveAwayGames: 3,\n    venueTypes: ['Arena'],\n    requiresSpecializedVenues: true,\n    calendarViewEnabled: true,\n    matrixViewEnabled: true,\n    bracketViewEnabled: true,\n    isOutdoorSport: false,\n    hasIndoorBackup: false,\n    regularSeasonScheduling: true,\n    defaultConstraints: []\n  }\n} as Partial<Record<SportType, SportConfig>>;\n\n// Helper function to get sport ID by type\nexport const getSportTypeById = (sportId: number): SportType => {\n  const sportTypes = Object.values(SportType);\n  if (sportId < 1 || sportId > sportTypes.length) {\n    throw new Error(`Invalid sport ID: ${sportId}`);\n  }\n  return sportTypes[sportId - 1];\n};\n\n// Export functions to get sport configurations\nexport const getSportConfig = (sportType: SportType): SportConfig => {\n  return sportConfigurations[sportType] || {\n    name: 'Unknown Sport',\n    icon: 'sports',\n    color: '#999999',\n    defaultGameDuration: 120,\n    minRestDays: 1,\n    recommendedRestDays: 2,\n    typicalSeasonLength: 8,\n    defaultGamesPerTeam: 8,\n    maxGamesPerWeek: 1,\n    allowDoubleHeaders: false,\n    requireHomeAwayBalance: true,\n    maxConsecutiveHomeGames: 2,\n    maxConsecutiveAwayGames: 2,\n    venueTypes: ['Generic'],\n    requiresSpecializedVenues: false,\n    calendarViewEnabled: true,\n    matrixViewEnabled: true,\n    bracketViewEnabled: false,\n    defaultConstraints: []\n  };\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1092, "column": 0}, "map": {"version":3,"sources":["file:///Users/nickw/Documents/GitHub/Flextime/frontend/src/contexts/SportConfigContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { SportType } from '../types';\nimport { getSportConfig, getSportTypeById, SportConfig } from '../config/sportConfig';\n\n// Define the context interface\ninterface SportConfigContextType {\n  currentSportId: number | null;\n  currentSportType: SportType | null;\n  sportConfig: SportConfig | null;\n  setSportById: (sportId: number) => void;\n  setSportByType: (sportType: SportType) => void;\n  loading: boolean;\n  error: string | null;\n}\n\n// Create the context with a default value\nconst SportConfigContext = createContext<SportConfigContextType>({\n  currentSportId: null,\n  currentSportType: null,\n  sportConfig: null,\n  setSportById: () => {},\n  setSportByType: () => {},\n  loading: false,\n  error: null\n});\n\n// Provider component\ninterface SportConfigProviderProps {\n  children: ReactNode;\n  defaultSportId?: number;\n}\n\nexport const SportConfigProvider: React.FC<SportConfigProviderProps> = ({ \n  children, \n  defaultSportId = 1 // Default to Football (ID: 1)\n}) => {\n  const [currentSportId, setCurrentSportId] = useState<number | null>(defaultSportId);\n  const [currentSportType, setCurrentSportType] = useState<SportType | null>(null);\n  const [sportConfig, setSportConfig] = useState<SportConfig | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Function to set sport by ID\n  const setSportById = (sportId: number) => {\n    setCurrentSportId(sportId);\n    try {\n      const sportType = getSportTypeById(sportId);\n      setCurrentSportType(sportType);\n    } catch (err) {\n      console.error('Error setting sport by ID:', err);\n      setError('Invalid sport ID');\n    }\n  };\n\n  // Function to set sport by type\n  const setSportByType = (sportType: SportType) => {\n    setCurrentSportType(sportType);\n    // Map SportType back to ID (reverse mapping)\n    const sportTypeValues = Object.values(SportType);\n    const sportTypeIndex = sportTypeValues.indexOf(sportType);\n    setCurrentSportId(sportTypeIndex + 1); // +1 because our IDs start at 1\n  };\n\n  // Update the sport config whenever the sport ID or type changes\n  useEffect(() => {\n    if (!currentSportId && !currentSportType) {\n      return;\n    }\n\n    setLoading(true);\n    try {\n      // If we have a sport type, use it directly\n      if (currentSportType) {\n        const config = getSportConfig(currentSportType);\n        setSportConfig(config);\n      } \n      // Otherwise use the ID to get the type\n      else if (currentSportId) {\n        const sportType = getSportTypeById(currentSportId);\n        setCurrentSportType(sportType);\n        const config = getSportConfig(sportType);\n        setSportConfig(config);\n      }\n      \n      setError(null);\n    } catch (err) {\n      console.error('Error loading sport configuration:', err);\n      setError('Failed to load sport configuration');\n      setSportConfig(null);\n    } finally {\n      setLoading(false);\n    }\n  }, [currentSportId, currentSportType]);\n\n  // Initialize with default sport\n  useEffect(() => {\n    if (defaultSportId) {\n      setSportById(defaultSportId);\n    }\n  }, [defaultSportId]);\n\n  return (\n    <SportConfigContext.Provider\n      value={{\n        currentSportId,\n        currentSportType,\n        sportConfig,\n        setSportById,\n        setSportByType,\n        loading,\n        error\n      }}\n    >\n      {children}\n    </SportConfigContext.Provider>\n  );\n};\n\n// Custom hook to use the sport config context\nexport const useSportConfigContext = () => useContext(SportConfigContext);\n\nexport default SportConfigContext;\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;;;;;AAaA,0CAA0C;AAC1C,MAAM,mCAAqB,CAAA,GAAA,iNAAA,CAAA,gBAAa,AAAD,EAA0B;IAC/D,gBAAgB;IAChB,kBAAkB;IAClB,aAAa;IACb,cAAc,KAAO;IACrB,gBAAgB,KAAO;IACvB,SAAS;IACT,OAAO;AACT;AAQO,MAAM,sBAA0D,CAAC,EACtE,QAAQ,EACR,iBAAiB,EAAE,8BAA8B;AAA/B,EACnB;IACC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,iNAAA,CAAA,WAAQ,AAAD,EAAiB;IACpE,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,iNAAA,CAAA,WAAQ,AAAD,EAAoB;IAC3E,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,iNAAA,CAAA,WAAQ,AAAD,EAAsB;IACnE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,iNAAA,CAAA,WAAQ,AAAD,EAAW;IAChD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,iNAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,8BAA8B;IAC9B,MAAM,eAAe,CAAC;QACpB,kBAAkB;QAClB,IAAI;YACF,MAAM,YAAY,CAAA,GAAA,wIAAA,CAAA,mBAAgB,AAAD,EAAE;YACnC,oBAAoB;QACtB,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,8BAA8B;YAC5C,SAAS;QACX;IACF;IAEA,gCAAgC;IAChC,MAAM,iBAAiB,CAAC;QACtB,oBAAoB;QACpB,6CAA6C;QAC7C,MAAM,kBAAkB,OAAO,MAAM,CAAC,iIAAA,CAAA,YAAS;QAC/C,MAAM,iBAAiB,gBAAgB,OAAO,CAAC;QAC/C,kBAAkB,iBAAiB,IAAI,gCAAgC;IACzE;IAEA,gEAAgE;IAChE,CAAA,GAAA,iNAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,kBAAkB,CAAC,kBAAkB;YACxC;QACF;QAEA,WAAW;QACX,IAAI;YACF,2CAA2C;YAC3C,IAAI,kBAAkB;gBACpB,MAAM,SAAS,CAAA,GAAA,wIAAA,CAAA,iBAAc,AAAD,EAAE;gBAC9B,eAAe;YACjB,OAEK,IAAI,gBAAgB;gBACvB,MAAM,YAAY,CAAA,GAAA,wIAAA,CAAA,mBAAgB,AAAD,EAAE;gBACnC,oBAAoB;gBACpB,MAAM,SAAS,CAAA,GAAA,wIAAA,CAAA,iBAAc,AAAD,EAAE;gBAC9B,eAAe;YACjB;YAEA,SAAS;QACX,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,sCAAsC;YACpD,SAAS;YACT,eAAe;QACjB,SAAU;YACR,WAAW;QACb;IACF,GAAG;QAAC;QAAgB;KAAiB;IAErC,gCAAgC;IAChC,CAAA,GAAA,iNAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,gBAAgB;YAClB,aAAa;QACf;IACF,GAAG;QAAC;KAAe;IAEnB,qBACE,0PAAC,mBAAmB,QAAQ;QAC1B,OAAO;YACL;YACA;YACA;YACA;YACA;YACA;YACA;QACF;kBAEC;;;;;;AAGP;AAGO,MAAM,wBAAwB,IAAM,CAAA,GAAA,iNAAA,CAAA,aAAU,AAAD,EAAE;uCAEvC","debugId":null}},
    {"offset": {"line": 1201, "column": 0}, "map": {"version":3,"sources":["file:///Users/nickw/Documents/GitHub/Flextime/frontend/src/contexts/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useMemo, ReactNode } from 'react';\nimport { ThemeProvider as MuiThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { SportType } from '../types';\nimport createExtendedTheme from '../theme/extendedTheme';\nimport { useSportConfigContext } from './SportConfigContext';\n\ntype ThemeMode = 'light' | 'dark';\n\n// Enhanced theme customization interface\ninterface ThemeCustomizations {\n  primaryColor?: string;\n  secondaryColor?: string;\n  accentColor?: string;\n  backgroundColor?: string;\n  textColor?: string;\n  borderRadius?: number;\n  fontFamily?: string;\n  glassIntensity?: number;\n  motionPreference?: 'reduced' | 'normal' | 'enhanced';\n  contrastMode?: 'normal' | 'high';\n}\n\n// Main theme interface\ninterface Theme {\n  mode: ThemeMode;\n  sport?: string;\n  team?: string;\n  customizations?: ThemeCustomizations;\n}\n\n// Big 12 teams mapping for team-specific theming\nconst BIG12_TEAMS = {\n  'Arizona': { primary: '#CC0033', secondary: '#003366' },\n  'Arizona State': { primary: '#8C1D40', secondary: '#FFC627' },\n  'Baylor': { primary: '#003015', secondary: '#FFB81C' },\n  'BYU': { primary: '#002E5D', secondary: '#FFFFFF' },\n  'Cincinnati': { primary: '#E00122', secondary: '#000000' },\n  'Colorado': { primary: '#CFB87C', secondary: '#000000' },\n  'Houston': { primary: '#C8102E', secondary: '#FFFFFF' },\n  'Iowa State': { primary: '#CC0033', secondary: '#FFC72C' },\n  'Kansas': { primary: '#0051BA', secondary: '#E8000D' },\n  'Kansas State': { primary: '#512888', secondary: '#FFFFFF' },\n  'Oklahoma State': { primary: '#FF6600', secondary: '#000000' },\n  'TCU': { primary: '#4D1979', secondary: '#A3A9AC' },\n  'Texas Tech': { primary: '#CC0000', secondary: '#000000' },\n  'UCF': { primary: '#FFC904', secondary: '#000000' },\n  'Utah': { primary: '#CC0000', secondary: '#FFFFFF' },\n  'West Virginia': { primary: '#002855', secondary: '#EAAA00' }\n} as const;\n\ninterface ThemeContextType {\n  theme: Theme;\n  themeMode: ThemeMode;\n  setThemeMode: (mode: ThemeMode) => void;\n  toggleTheme: () => void;\n  setSportTheme: (sport: string) => void;\n  setTeamTheme: (team: string) => void;\n  setCustomizations: (customizations: Partial<ThemeCustomizations>) => void;\n  resetTheme: () => void;\n  currentSport?: string;\n  currentTeam?: string;\n}\n\n// Create the context with undefined as initial value\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\n// Storage keys for theme persistence\nconst THEME_STORAGE_KEYS = {\n  MODE: 'flextime-theme-mode',\n  SPORT: 'flextime-theme-sport',\n  TEAM: 'flextime-theme-team',\n  CUSTOMIZATIONS: 'flextime-theme-customizations'\n} as const;\n\n// Get initial theme from localStorage or system preference\nconst getInitialTheme = (): Theme => {\n  if (typeof window === 'undefined') {\n    return { mode: 'light' }; // Default for SSR\n  }\n  \n  try {\n    // Get stored theme mode\n    const storedMode = localStorage.getItem(THEME_STORAGE_KEYS.MODE);\n    const mode: ThemeMode = (storedMode === 'dark' || storedMode === 'light') \n      ? storedMode \n      : (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) \n        ? 'dark' \n        : 'light';\n\n    // Get stored sport and team\n    const sport = localStorage.getItem(THEME_STORAGE_KEYS.SPORT) || undefined;\n    const team = localStorage.getItem(THEME_STORAGE_KEYS.TEAM) || undefined;\n    \n    // Get stored customizations\n    const customizationsStr = localStorage.getItem(THEME_STORAGE_KEYS.CUSTOMIZATIONS);\n    const customizations: ThemeCustomizations | undefined = customizationsStr \n      ? JSON.parse(customizationsStr) \n      : undefined;\n\n    return { mode, sport, team, customizations };\n  } catch (error) {\n    console.error('Error reading theme from localStorage', error);\n    return { mode: 'light' };\n  }\n};\n\n// Save theme to localStorage\nconst saveThemeToStorage = (theme: Theme): void => {\n  if (typeof window === 'undefined') return;\n  \n  try {\n    localStorage.setItem(THEME_STORAGE_KEYS.MODE, theme.mode);\n    \n    if (theme.sport) {\n      localStorage.setItem(THEME_STORAGE_KEYS.SPORT, theme.sport);\n    } else {\n      localStorage.removeItem(THEME_STORAGE_KEYS.SPORT);\n    }\n    \n    if (theme.team) {\n      localStorage.setItem(THEME_STORAGE_KEYS.TEAM, theme.team);\n    } else {\n      localStorage.removeItem(THEME_STORAGE_KEYS.TEAM);\n    }\n    \n    if (theme.customizations) {\n      localStorage.setItem(THEME_STORAGE_KEYS.CUSTOMIZATIONS, JSON.stringify(theme.customizations));\n    } else {\n      localStorage.removeItem(THEME_STORAGE_KEYS.CUSTOMIZATIONS);\n    }\n  } catch (error) {\n    console.error('Error saving theme to localStorage', error);\n  }\n};\n\n// Apply theme to document attributes for CSS variable access\nconst applyThemeToDocument = (theme: Theme): void => {\n  if (typeof document === 'undefined') return;\n  \n  const root = document.documentElement;\n  \n  // Set mode attribute\n  root.setAttribute('data-theme-mode', theme.mode);\n  \n  // Set sport attribute\n  if (theme.sport) {\n    root.setAttribute('data-theme-sport', theme.sport.toLowerCase().replace(/[\\s']/g, '-'));\n  } else {\n    root.removeAttribute('data-theme-sport');\n  }\n  \n  // Set team attribute\n  if (theme.team) {\n    root.setAttribute('data-theme-team', theme.team.toLowerCase().replace(/\\s/g, '-'));\n  } else {\n    root.removeAttribute('data-theme-team');\n  }\n  \n  // Apply customizations as CSS custom properties\n  if (theme.customizations) {\n    const customizations = theme.customizations;\n    \n    if (customizations.primaryColor) {\n      root.style.setProperty('--flextime-primary', customizations.primaryColor);\n    }\n    if (customizations.secondaryColor) {\n      root.style.setProperty('--flextime-secondary', customizations.secondaryColor);\n    }\n    if (customizations.accentColor) {\n      root.style.setProperty('--flextime-accent', customizations.accentColor);\n    }\n    if (customizations.backgroundColor) {\n      root.style.setProperty('--flextime-bg', customizations.backgroundColor);\n    }\n    if (customizations.textColor) {\n      root.style.setProperty('--flextime-text', customizations.textColor);\n    }\n    if (customizations.borderRadius !== undefined) {\n      root.style.setProperty('--flextime-border-radius', `${customizations.borderRadius}px`);\n    }\n    if (customizations.fontFamily) {\n      root.style.setProperty('--flextime-font-family', customizations.fontFamily);\n    }\n    if (customizations.glassIntensity !== undefined) {\n      root.style.setProperty('--flextime-glass-intensity', customizations.glassIntensity.toString());\n    }\n    \n    // Motion preference\n    if (customizations.motionPreference) {\n      root.setAttribute('data-motion-preference', customizations.motionPreference);\n    }\n    \n    // Contrast mode\n    if (customizations.contrastMode) {\n      root.setAttribute('data-contrast-mode', customizations.contrastMode);\n    }\n  }\n};\n\ninterface ThemeProviderProps {\n  children: ReactNode;\n}\n\n/**\n * Enhanced ThemeProvider component that manages comprehensive theme state\n * including mode, sport, team, and custom theme configurations.\n * Integrates with MUI ThemeProvider and applies sport/team-specific theming.\n */\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {\n  // Initialize theme state from localStorage\n  const [theme, setTheme] = useState<Theme>(getInitialTheme);\n  \n  // Get the current sport configuration from context\n  const { currentSportType } = useSportConfigContext();\n  \n  // Theme manipulation functions\n  const setThemeMode = (mode: ThemeMode) => {\n    setTheme(prev => ({ ...prev, mode }));\n  };\n\n  const toggleTheme = () => {\n    setTheme(prev => ({ \n      ...prev, \n      mode: prev.mode === 'light' ? 'dark' : 'light' \n    }));\n  };\n\n  const setSportTheme = (sport: string) => {\n    setTheme(prev => ({ \n      ...prev, \n      sport,\n      // Clear team when sport changes to avoid conflicts\n      team: undefined \n    }));\n  };\n\n  const setTeamTheme = (team: string) => {\n    setTheme(prev => {\n      // Apply team colors to customizations if Big 12 team\n      const teamColors = BIG12_TEAMS[team as keyof typeof BIG12_TEAMS];\n      const teamCustomizations: Partial<ThemeCustomizations> = teamColors\n        ? {\n            primaryColor: teamColors.primary,\n            secondaryColor: teamColors.secondary,\n            accentColor: teamColors.primary\n          }\n        : {};\n\n      return {\n        ...prev,\n        team,\n        customizations: {\n          ...prev.customizations,\n          ...teamCustomizations\n        }\n      };\n    });\n  };\n\n  const setCustomizations = (customizations: Partial<ThemeCustomizations>) => {\n    setTheme(prev => ({\n      ...prev,\n      customizations: {\n        ...prev.customizations,\n        ...customizations\n      }\n    }));\n  };\n\n  const resetTheme = useCallback(() => {\n    setTheme({ mode: theme.mode }); // Keep current mode but reset everything else\n  }, [theme.mode]);\n\n  // Save theme to localStorage and apply to document when theme changes\n  useEffect(() => {\n    saveThemeToStorage(theme);\n    applyThemeToDocument(theme);\n  }, [theme]);\n\n  // Update sport from context if it changes\n  useEffect(() => {\n    if (currentSportType && currentSportType !== theme.sport) {\n      setSportTheme(currentSportType);\n    }\n  }, [currentSportType, theme.sport]);\n\n  // Create the MUI theme object\n  const muiTheme = useMemo(() => {\n    let sportType = SportType.FOOTBALL; // Default\n    \n    // Try to match sport string to SportType enum\n    if (theme.sport) {\n      const matchedSport = Object.values(SportType).find(\n        sport => sport.toLowerCase() === theme.sport!.toLowerCase()\n      );\n      if (matchedSport) {\n        sportType = matchedSport;\n      }\n    }\n    \n    // Use current sport type from context if available\n    if (currentSportType) {\n      sportType = currentSportType;\n    }\n\n    return createExtendedTheme(theme.mode, sportType);\n  }, [theme.mode, theme.sport, currentSportType]);\n\n  // Create the context value\n  const contextValue = useMemo(() => ({\n    theme,\n    themeMode: theme.mode,\n    setThemeMode,\n    toggleTheme,\n    setSportTheme,\n    setTeamTheme,\n    setCustomizations,\n    resetTheme,\n    currentSport: theme.sport || currentSportType,\n    currentTeam: theme.team\n  }), [theme, currentSportType, resetTheme]);\n\n  return (\n    <ThemeContext.Provider value={contextValue}>\n      <MuiThemeProvider theme={muiTheme}>\n        <CssBaseline />\n        {children}\n      </MuiThemeProvider>\n    </ThemeContext.Provider>\n  );\n};\n\n/**\n * Custom hook to use the enhanced theme context\n * @returns ThemeContextType containing theme state and manipulation functions\n * @throws Error if used outside of ThemeProvider\n */\nexport const useThemeContext = (): ThemeContextType => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useThemeContext must be used within a ThemeProvider');\n  }\n  return context;\n};\n\n/**\n * Convenience hook for accessing just the theme mode\n * @returns Current theme mode ('light' | 'dark')\n */\nexport const useThemeMode = (): ThemeMode => {\n  const { themeMode } = useThemeContext();\n  return themeMode;\n};\n\n/**\n * Convenience hook for accessing sport and team themes\n * @returns Object with current sport and team\n */\nexport const useSportTeamTheme = () => {\n  const { currentSport, currentTeam, setSportTheme, setTeamTheme } = useThemeContext();\n  return {\n    currentSport,\n    currentTeam,\n    setSportTheme,\n    setTeamTheme\n  };\n};\n\n/**\n * Convenience hook for accessing theme customizations\n * @returns Object with customizations and setter function\n */\nexport const useThemeCustomizations = () => {\n  const { theme, setCustomizations, resetTheme } = useThemeContext();\n  return {\n    customizations: theme.customizations,\n    setCustomizations,\n    resetTheme\n  };\n};\n\n// Export the complete Theme and ThemeCustomizations interfaces for external use\nexport type { Theme, ThemeCustomizations, ThemeMode };\n\n// Export Big 12 teams for external components\nexport { BIG12_TEAMS };\n\nexport default ThemeProvider;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1542, "column": 0}, "map": {"version":3,"sources":["file:///Users/nickw/Documents/GitHub/Flextime/frontend/app/layout.tsx"],"sourcesContent":["import type { Metadata } from 'next'\nimport { Inter } from 'next/font/google'\nimport './globals.css'\nimport Navbar from './components/Navbar'\nimport { FlexTimeAnimatedBackground } from '../src/components/ui/FlexTimeAnimatedBackground'\nimport { ThemeProvider } from '../src/contexts/ThemeContext'\n\nconst inter = Inter({ subsets: ['latin'] })\n\nexport const metadata: Metadata = {\n  title: 'FlexTime - Intelligent Scheduling for Big 12 Conference',\n  description: 'Revolutionary AI-powered scheduling platform transforming Big 12 Conference sports',\n}\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode\n}) {\n  return (\n    <html lang=\"en\">\n      <body className={`${inter.className} min-h-screen relative overflow-x-hidden transition-colors duration-300`}>\n        <ThemeProvider>\n          <div className=\"bg-gradient-to-br from-slate-50 via-white to-gray-100 dark:from-gray-950 dark:via-black dark:to-gray-900 text-gray-900 dark:text-white min-h-screen transition-colors duration-300\">\n            {/* Animated Background */}\n            <FlexTimeAnimatedBackground \n              intensity=\"low\" \n              showGrid={true} \n              showFloatingElements={true}\n              className=\"fixed inset-0 z-0\"\n            />\n            \n            {/* Content Layer */}\n            <div className=\"relative z-10\">\n              <Navbar />\n              <main className=\"pt-20\">\n                {children}\n              </main>\n            </div>\n          </div>\n        </ThemeProvider>\n      </body>\n    </html>\n  )\n}"],"names":[],"mappings":";;;;;;AAGA;AACA;AACA;;;;;;;AAIO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEe,SAAS,WAAW,EACjC,QAAQ,EAGT;IACC,qBACE,0PAAC;QAAK,MAAK;kBACT,cAAA,0PAAC;YAAK,WAAW,GAAG,yIAAA,CAAA,UAAK,CAAC,SAAS,CAAC,uEAAuE,CAAC;sBAC1G,cAAA,0PAAC,4IAAA,CAAA,gBAAa;0BACZ,cAAA,0PAAC;oBAAI,WAAU;;sCAEb,0PAAC,kKAAA,CAAA,6BAA0B;4BACzB,WAAU;4BACV,UAAU;4BACV,sBAAsB;4BACtB,WAAU;;;;;;sCAIZ,0PAAC;4BAAI,WAAU;;8CACb,0PAAC,wIAAA,CAAA,UAAM;;;;;8CACP,0PAAC;oCAAK,WAAU;8CACb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQjB","debugId":null}}]
}